int page = 1; // Current page indicator (1, 2, or 3)
boolean onTimeSelected = false;    // "On-time" button selection state
boolean delayedSelected = false;   // "Delayed" button selection state
boolean cancelledSelected = false; // "Cancelled" button selection state

void setup() {
  size(800, 600); // Set canvas size to 800x600 pixels
  textFont(createFont("Arial", 20)); // Use Arial font with size 20
}

void draw() {
  background(0, 102, 204); // Set a blue background
  if (page == 1) {
    drawPage1(); // Draw the main search page
  } else if (page == 2) {
    drawPage2(); // Draw the flight details page
  } else if (page == 3) {
    drawPage3(); // Draw the related flight information page
  }
}

// Draw Page 1: Main search page
void drawPage1() {
  fill(255);
  textSize(36);
  textAlign(CENTER);
  text("Flight Research", width / 2, 50);
  drawPanel(50, 80, 700, 300, "Search Criteria"); // Draw search criteria panel
  drawSearchCriteria(); // Draw search criteria including flight status toggles
  drawPanel(50, 400, 700, 150, ""); // Draw panel for flight recommendations
  drawFlightRecommendations(); // Draw the "Select Flight" button
}

// Draw Page 2: Detailed flight information
void drawPage2() {
  fill(255);
  textSize(32);
  textAlign(CENTER);
  text("Detailed flight informations", width / 2, 50);
  drawPanel(100, 100, 600, 300, "Flight Details"); // Flight details panel
  drawFlightDetails(); // Draw flight details information
  drawBackButton(); // Draw the Back button with hover effect
}

// Draw Page 3: Related flight information
void drawPage3() {
  fill(255);
  textSize(32);
  textAlign(CENTER);
  text("Related flight information", width / 2, 50);
  drawBackButton(); // Draw the Back button with hover effect
}

// Draw the flight recommendation button on Page 1
void drawFlightRecommendations() {
  fill(255);
  rect(300, 450, 200, 40, 8); // Draw a rounded rectangle button
  fill(0);
  textAlign(CENTER, CENTER);
  text("Select Flight", 400, 470); // Button label
}

// Draw the detailed flight information on Page 2
void drawFlightDetails() {
  fill(0);
  textSize(20);
  text("Airline: Example Air", 120, 170);
  text("Flight Number: EX123", 120, 200);
  // Draw interactive buttons for different flight details
  drawInteractiveButton(120, 230, "Departure: XYZ Airport");
  drawInteractiveButton(120, 260, "Arrival: ABC Airport");
  drawInteractiveButton(120, 290, "Distance: 500 miles");
}

// Draw a generic interactive button with a label
void drawInteractiveButton(int x, int y, String label) {
  fill(255);
  rect(x, y - 20, 250, 30, 8); // Button rectangle with rounded corners
  fill(0);
  textAlign(LEFT, CENTER);
  text(label, x + 10, y - 5); // Button label text
}

// Draw a panel with a title
void drawPanel(int x, int y, int w, int h, String title) {
  fill(255, 255, 255, 180); // Semi-transparent white background
  rect(x, y, w, h, 15); // Draw panel with rounded corners
  fill(0);
  textSize(22);
  textAlign(LEFT);
  text(title, x + 20, y + 30); // Panel title
}

// Draw the search criteria section, including flight status toggles
void drawSearchCriteria() {
  fill(0);
  textSize(20);
  text("Airport", 80, 140);
  text("Origin:", 80, 165);
  text("Destination:", 80, 190);
  
  text("Date Range", 80, 230);
  text("Fly Date Range:", 80, 255);
  text("Arrive Date Range:", 80, 280);
  
  text("Lateness", 80, 320);
  drawLatenessButtons(); // Draw the three toggle buttons for flight status
}

// Draw the three flight status toggle buttons
void drawLatenessButtons() {
  drawToggleButton(80, 350, "On-time", onTimeSelected);
  drawToggleButton(200, 350, "Delayed", delayedSelected);
  drawToggleButton(320, 350, "Cancelled", cancelledSelected);
}

// Draw a toggle button with hover and selection effects
void drawToggleButton(int x, int y, String label, boolean selected) {
  if (selected) {
    fill(150); // Use a darker color when selected
  } else if (mouseX > x && mouseX < x + 100 && mouseY > y - 20 && mouseY < y + 10) {
    fill(200); // Slightly darker when mouse hovers over
  } else {
    fill(255); // Default button color
  }
  rect(x, y - 20, 100, 30, 8); // Button rectangle with rounded corners
  fill(0);
  textAlign(CENTER, CENTER);
  text(label, x + 50, y - 5); // Draw the button label
}

// Draw the Back button with a hover effect
void drawBackButton() {
  // Check if the mouse is within the Back button area (x: 50-150, y: 500-540)
  if (mouseX > 50 && mouseX < 150 && mouseY > 500 && mouseY < 540) {
    fill(200, 130, 0);  // Darker color when hovered
  } else {
    fill(255, 165, 0);  // Original orange color
  }
  rect(50, 500, 100, 40, 8); // Draw the Back button rectangle
  fill(0);
  textSize(20);
  textAlign(CENTER, CENTER);
  text("Back", 100, 520); // Back button label
}

// Handle mouse click events for navigation and toggling buttons
void mousePressed() {
  if (page == 1) {
    // Navigate to Page 2 when clicking the "Select Flight" button
    if (mouseX > 300 && mouseX < 500 && mouseY > 450 && mouseY < 490) {
      page = 2;
    }
    // Toggle "On-time" button: deselect if already selected, else select and deselect others
    if (mouseX > 80 && mouseX < 180 && mouseY > 330 && mouseY < 360) {
      if (onTimeSelected) {
        onTimeSelected = false;
      } else {
        onTimeSelected = true;
        delayedSelected = false;
        cancelledSelected = false;
      }
    }
    // Toggle "Delayed" button
    else if (mouseX > 200 && mouseX < 300 && mouseY > 330 && mouseY < 360) {
      if (delayedSelected) {
        delayedSelected = false;
      } else {
        delayedSelected = true;
        onTimeSelected = false;
        cancelledSelected = false;
      }
    }
    // Toggle "Cancelled" button
    else if (mouseX > 320 && mouseX < 420 && mouseY > 330 && mouseY < 360) {
      if (cancelledSelected) {
        cancelledSelected = false;
      } else {
        cancelledSelected = true;
        onTimeSelected = false;
        delayedSelected = false;
      }
    }
  }
  
  if (page == 2) {
    // In Page 2, clicking on any flight detail button navigates to Page 3.
    // "Departure" button area (y: 210 to 240)
    if (mouseX > 120 && mouseX < 370 && mouseY > 210 && mouseY < 240) {
      page = 3; 
    }
    // "Arrival" button area (y: 240 to 270)
    else if (mouseX > 120 && mouseX < 370 && mouseY > 240 && mouseY < 270) {
      page = 3; 
    }
    // "Distance" button area (y: 270 to 300)
    else if (mouseX > 120 && mouseX < 370 && mouseY > 270 && mouseY < 300) {
      page = 3; 
    }
    // Clicking the Back button area returns to Page 1
    else if (mouseX > 50 && mouseX < 150 && mouseY > 500 && mouseY < 540) {
      page = 1; 
    }
  }
  
  // In Page 3, clicking the Back button returns to Page 2
  if (page == 3 && mouseX > 50 && mouseX < 150 && mouseY > 500 && mouseY < 540) {
    page = 2; 
  }
}
