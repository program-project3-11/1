int page = 1; // Current page indicator (1, 2, or 3)
boolean onTimeSelected = false;    // "On-time" button selection state
boolean delayedSelected = false;   // "Delayed" button selection state
boolean cancelledSelected = false; // "Cancelled" button selection state

// 输入框全局变量
String originText = "";
String destinationText = "";
String flyDateText = "";
String arriveDateText = "";
// focusedField: 0 无焦点，1: Origin, 2: Destination, 3: Fly Date Range, 4: Arrive Date Range
int focusedField = 0;

void setup() {
  size(800, 600); // Set canvas size to 800x600 pixels
  textFont(createFont("Arial", 20)); // Use Arial font with size 20
}

void draw() {
  background(0, 102, 204); // Set a background
  if (page == 1) {
    drawPage1(); // Draw the main search page
  } else if (page == 2) {
    drawPage2(); // Draw the flight details page
  } else if (page == 3) {
    drawPage3(); // Draw the related flight information page
  }
}

// Draw Page 1: Main search page
void drawPage1() {
  fill(255);
  textSize(36);
  textAlign(CENTER);
  text("Flight Research", width / 2, 50);
  drawPanel(50, 80, 700, 300, "Search Criteria"); // Draw search criteria panel
  drawSearchCriteria(); // Draw search criteria including flight status toggles and input fields
  drawPanel(50, 400, 700, 150, ""); // Draw panel for flight recommendations
  drawFlightRecommendations(); // Draw the "Select Flight" button
}

// Draw Page 2: Detailed flight information
void drawPage2() {
  fill(255);
  textSize(32);
  textAlign(CENTER);
  text("Detailed flight informations", width / 2, 50);
  drawPanel(100, 100, 600, 300, "Flight Details"); // Flight details panel
  drawFlightDetails(); // Draw flight details information
  drawBackButton(); // Draw the Back button with hover effect
}

// Draw Page 3: Related flight information
void drawPage3() {
  fill(255);
  textSize(32);
  textAlign(CENTER);
  text("Related flight information", width / 2, 50);
  drawBackButton(); // Draw the Back button with hover effect
}

// Draw the flight recommendation button on Page 1
void drawFlightRecommendations() {
  fill(255);
  rect(300, 450, 200, 40, 8); // Draw a rounded rectangle button
  fill(0);
  textAlign(CENTER, CENTER);
  text("Select Flight", 400, 470); // Button label
}

// Draw the detailed flight information on Page 2
void drawFlightDetails() {
  fill(0);
  textSize(20);
  text("Airline: Example Air", 120, 170);
  text("Flight Number: EX123", 120, 200);
  // Draw interactive buttons for different flight details
  drawInteractiveButton(120, 230, "Departure: XYZ Airport");
  drawInteractiveButton(120, 260, "Arrival: ABC Airport");
  drawInteractiveButton(120, 290, "Distance: 500 miles");
}

// Draw a generic interactive button with a label
void drawInteractiveButton(int x, int y, String label) {
  fill(255);
  rect(x, y - 20, 250, 30, 8); // Button rectangle with rounded corners
  fill(0);
  textAlign(LEFT, CENTER);
  text(label, x + 10, y - 5); // Button label text
}

// Draw a panel with a title
void drawPanel(int x, int y, int w, int h, String title) {
  fill(255, 255, 255, 180); // Semi-transparent white background
  rect(x, y, w, h, 15); // Draw panel with rounded corners
  fill(0);
  textSize(22);
  textAlign(LEFT);
  text(title, x + 20, y + 30); // Panel title
}

// Draw the search criteria section, including flight status toggles and input fields
void drawSearchCriteria() {
  fill(0);
  textSize(20);
  text("Airport", 80, 140);
  
  // Origin 标签与输入框
  text("Origin:", 80, 165);
  drawInputField(140, 145, 200, 30, originText, focusedField == 1);
  
  // Destination 标签与输入框
  text("Destination:", 80, 190);
  drawInputField(190, 175, 200, 30, destinationText, focusedField == 2);
  
  text("Date Range", 80, 230);
  
  // Fly Date Range 标签与输入框
  text("Fly Date Range:", 80, 255);
  drawInputField(225, 240, 200, 30, flyDateText, focusedField == 3);
  
  // Arrive Date Range 标签与输入框
  text("Arrive Date Range:", 80, 280);
  drawInputField(250, 270, 200, 30, arriveDateText, focusedField == 4);
  
  text("Lateness", 80, 320);
  drawLatenessButtons(); // Draw the three toggle buttons for flight status
}

// 绘制一个输入框，若获得焦点则边框为红色
void drawInputField(int x, int y, int w, int h, String content, boolean focused) {
  if (focused) {
    stroke(255, 0, 0); // 红色边框表示获得焦点
  } else {
    stroke(0);
  }
  fill(255);
  rect(x, y, w, h, 8);
  noStroke();
  fill(0);
  textAlign(LEFT, CENTER);
  text(content, x + 5, y + h/2);
}

// Draw the three flight status toggle buttons
void drawLatenessButtons() {
  drawToggleButton(80, 350, "On-time", onTimeSelected);
  drawToggleButton(200, 350, "Delayed", delayedSelected);
  drawToggleButton(320, 350, "Cancelled", cancelledSelected);
}

// Draw a toggle button with hover and selection effects
void drawToggleButton(int x, int y, String label, boolean selected) {
  if (selected) {
    fill(150); // Darker when selected
  } else if (mouseX > x && mouseX < x + 100 && mouseY > y - 20 && mouseY < y + 10) {
    fill(200); // Hover effect
  } else {
    fill(255); // Default color
  }
  rect(x, y - 20, 100, 30, 8); // Button rectangle with rounded corners
  fill(0);
  textAlign(CENTER, CENTER);
  text(label, x + 50, y - 5); // Button label
}

// Draw the Back button with a hover effect
void drawBackButton() {
  if (mouseX > 50 && mouseX < 150 && mouseY > 500 && mouseY < 540) {
    fill(200, 130, 0);  // Darker color when hovered
  } else {
    fill(255, 165, 0);  // Original orange color
  }
  rect(50, 500, 100, 40, 8); // Draw the Back button rectangle
  fill(0);
  textSize(20);
  textAlign(CENTER, CENTER);
  text("Back", 100, 520); // Back button label
}

// Handle mouse click events for navigation, toggling buttons, and输入框焦点
void mousePressed() {
  if (page == 1) {
    // 检查是否点击到输入框区域
    // Origin 输入框：位置 (180,150) 大小 (200,30)
    if (mouseX > 180 && mouseX < 380 && mouseY > 150 && mouseY < 180) {
      focusedField = 1;
      return;
    }
    // Destination 输入框：位置 (180,175) 大小 (200,30)
    if (mouseX > 180 && mouseX < 380 && mouseY > 175 && mouseY < 205) {
      focusedField = 2;
      return;
    }
    // Fly Date Range 输入框：位置 (220,240) 大小 (200,30)
    if (mouseX > 220 && mouseX < 420 && mouseY > 240 && mouseY < 270) {
      focusedField = 3;
      return;
    }
    // Arrive Date Range 输入框：位置 (220,265) 大小 (200,30)
    if (mouseX > 220 && mouseX < 420 && mouseY > 265 && mouseY < 295) {
      focusedField = 4;
      return;
    }
    // 如果点击其他区域则取消输入框焦点
    focusedField = 0;
    
    // 点击“Select Flight”按钮区域进入 Page 2
    if (mouseX > 300 && mouseX < 500 && mouseY > 450 && mouseY < 490) {
      page = 2;
    }
    // Toggle "On-time" button
    if (mouseX > 80 && mouseX < 180 && mouseY > 330 && mouseY < 360) {
      if (onTimeSelected) {
        onTimeSelected = false;
      } else {
        onTimeSelected = true;
        delayedSelected = false;
        cancelledSelected = false;
      }
    }
    // Toggle "Delayed" button
    else if (mouseX > 200 && mouseX < 300 && mouseY > 330 && mouseY < 360) {
      if (delayedSelected) {
        delayedSelected = false;
      } else {
        delayedSelected = true;
        onTimeSelected = false;
        cancelledSelected = false;
      }
    }
    // Toggle "Cancelled" button
    else if (mouseX > 320 && mouseX < 420 && mouseY > 330 && mouseY < 360) {
      if (cancelledSelected) {
        cancelledSelected = false;
      } else {
        cancelledSelected = true;
        onTimeSelected = false;
        delayedSelected = false;
      }
    }
  }
  
  if (page == 2) {
    // 在 Page 2 中，点击任一航班详情按钮进入 Page 3
    if (mouseX > 120 && mouseX < 370 && mouseY > 210 && mouseY < 240) {
      page = 3; 
    }
    else if (mouseX > 120 && mouseX < 370 && mouseY > 240 && mouseY < 270) {
      page = 3; 
    }
    else if (mouseX > 120 && mouseX < 370 && mouseY > 270 && mouseY < 300) {
      page = 3; 
    }
    // 点击 Back 按钮返回 Page 1
    else if (mouseX > 50 && mouseX < 150 && mouseY > 500 && mouseY < 540) {
      page = 1; 
    }
  }
  
  // 在 Page 3 中，点击 Back 按钮返回 Page 2
  if (page == 3 && mouseX > 50 && mouseX < 150 && mouseY > 500 && mouseY < 540) {
    page = 2; 
  }
}

// 处理键盘输入事件，输入字符或删除字符
void keyPressed() {
  if (focusedField != 0) {
    if (key == BACKSPACE) {
      // 删除最后一个字符
      if (focusedField == 1 && originText.length() > 0) {
        originText = originText.substring(0, originText.length() - 1);
      } else if (focusedField == 2 && destinationText.length() > 0) {
        destinationText = destinationText.substring(0, destinationText.length() - 1);
      } else if (focusedField == 3 && flyDateText.length() > 0) {
        flyDateText = flyDateText.substring(0, flyDateText.length() - 1);
      } else if (focusedField == 4 && arriveDateText.length() > 0) {
        arriveDateText = arriveDateText.substring(0, arriveDateText.length() - 1);
      }
    } 
    else if (key == ENTER || key == RETURN) {
      // 按下回车键后取消焦点
      focusedField = 0;
    }
    else if (key != CODED) { // 普通字符
      if (focusedField == 1) {
        originText += key;
      } else if (focusedField == 2) {
        destinationText += key;
      } else if (focusedField == 3) {
        flyDateText += key;
      } else if (focusedField == 4) {
        arriveDateText += key;
      }
    }
  }
}
