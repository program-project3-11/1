class Flight {
    String flDate; // 航班日期
    String mkCarrier; // 航空公司代码
    int mkCarrierFlNum; // 航班号
    String origin; // 起飞机场代码
    String dest; // 目的地机场代码
    int distance; // 航程距离

    // 构造函数
    Flight(String flDate, String mkCarrier, int mkCarrierFlNum, String origin, String dest, int distance) {
        this.flDate = flDate;
        this.mkCarrier = mkCarrier;
        this.mkCarrierFlNum = mkCarrierFlNum;
        this.origin = origin;
        this.dest = dest;
        this.distance = distance;
    }

    // 打印航班信息
    void display() {
        println("Flight Date: " + flDate);
        println("Carrier: " + mkCarrier);
        println("Flight Number: " + mkCarrierFlNum);
        println("Origin: " + origin);
        println("Destination: " + dest);
        println("Distance: " + distance + " miles");
        println("----------------------------");
    }
}

ArrayList<Flight> flights = new ArrayList<Flight>();

void setup() {
    size(400, 400); // 设置窗口大小
    background(255); // 设置背景颜色

    // 读取CSV文件
    String[] lines = loadStrings("flights_full.csv");

    // 跳过标题行
    for (int i = 1; i < lines.length; i++) {
        // 使用split方法分割每行数据
        String[] columns = split(lines[i], ',');
        
        // 检查列数是否足够
        if (columns.length >= 25) { // 确保至少有25列数据
            try {
                // 提取需要的字段
                String flDate = columns[0];
                String mkCarrier = columns[1];
                int mkCarrierFlNum = Integer.parseInt(columns[2]);
                String origin = columns[4];
                String dest = columns[6];
                int distance = Integer.parseInt(columns[24]);

                // 创建Flight对象并添加到列表
                flights.add(new Flight(flDate, mkCarrier, mkCarrierFlNum, origin, dest, distance));
            } catch (Exception e) {
                // 如果解析过程中出现异常，打印错误信息
                println("Error processing line " + i + ": " + lines[i]);
                println("Exception: " + e.getMessage());
            }
        } else {
            // 如果列数不足，打印调试信息
            println("Line " + i + " has insufficient columns: " + columns.length);
            println("Data: " + lines[i]);
        }
    }

    // 打印所有航班信息
    for (Flight flight : flights) {
        flight.display();
    }
}

void draw() {
    // 空的draw函数，避免窗口闪烁
}
